{"ast":null,"code":"var _jsxFileName = \"/Users/manojvirinchichitta/ExpenseTracker/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useExpense } from '../context/ExpenseContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _analytics$monthly, _selectedMonthData$to, _selectedMonthData$tr;\n  const {\n    analytics,\n    myItemsThisMonthTotal\n  } = useExpense();\n  const monthlyData = (analytics === null || analytics === void 0 ? void 0 : (_analytics$monthly = analytics.monthly) === null || _analytics$monthly === void 0 ? void 0 : _analytics$monthly.monthly_data) || [];\n  const monthOptions = useMemo(() => {\n    return monthlyData.map(m => ({\n      value: `${m.year}-${String(m.month).padStart(2, '0')}`,\n      label: new Date(m.year, m.month - 1, 1).toLocaleString(undefined, {\n        month: 'long',\n        year: 'numeric'\n      }),\n      ...m\n    })).sort((a, b) => a.year - b.year || a.month - b.month);\n  }, [monthlyData]);\n  const currentY = new Date().getFullYear();\n  const currentM = new Date().getMonth() + 1;\n  const currentValue = `${currentY}-${String(currentM).padStart(2, '0')}`;\n  const [selectedMonthValue, setSelectedMonthValue] = useState(currentValue);\n  useEffect(() => {\n    // If current month not in options, default to the latest available\n    if (!monthOptions.find(o => o.value === selectedMonthValue)) {\n      if (monthOptions.length > 0) {\n        setSelectedMonthValue(monthOptions[monthOptions.length - 1].value);\n      }\n    }\n  }, [monthOptions, selectedMonthValue]);\n  const selectedMonthData = useMemo(() => {\n    return monthOptions.find(o => o.value === selectedMonthValue);\n  }, [monthOptions, selectedMonthValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-900 dark:text-gray-100\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-gray-700 dark:text-gray-300\",\n      children: \"Welcome back! Here's a quick overview.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex items-center gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-sm text-gray-600 dark:text-gray-300\",\n        children: \"Select month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input\",\n        value: selectedMonthValue,\n        onChange: e => setSelectedMonthValue(e.target.value),\n        children: monthOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt.value,\n          children: opt.label\n        }, opt.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"This Month (My Items)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xl font-bold\",\n          children: [\"$\", (myItemsThisMonthTotal || 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Selected Month Total (DB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xl font-bold\",\n          children: [\"$\", ((_selectedMonthData$to = selectedMonthData === null || selectedMonthData === void 0 ? void 0 : selectedMonthData.total_amount) !== null && _selectedMonthData$to !== void 0 ? _selectedMonthData$to : 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Selected Month Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xl font-bold\",\n          children: (_selectedMonthData$tr = selectedMonthData === null || selectedMonthData === void 0 ? void 0 : selectedMonthData.transaction_count) !== null && _selectedMonthData$tr !== void 0 ? _selectedMonthData$tr : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vz4hYjhwZFBy/nx7MWbyen6CmCA=\", false, function () {\n  return [useExpense];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useExpense","jsxDEV","_jsxDEV","Dashboard","_s","_analytics$monthly","_selectedMonthData$to","_selectedMonthData$tr","analytics","myItemsThisMonthTotal","monthlyData","monthly","monthly_data","monthOptions","map","m","value","year","String","month","padStart","label","Date","toLocaleString","undefined","sort","a","b","currentY","getFullYear","currentM","getMonth","currentValue","selectedMonthValue","setSelectedMonthValue","find","o","length","selectedMonthData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","opt","toFixed","total_amount","transaction_count","_c","$RefreshReg$"],"sources":["/Users/manojvirinchichitta/ExpenseTracker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport { useExpense } from '../context/ExpenseContext';\n\nconst Dashboard = () => {\n  const { analytics, myItemsThisMonthTotal } = useExpense();\n\n  const monthlyData = analytics?.monthly?.monthly_data || [];\n\n  const monthOptions = useMemo(() => {\n    return monthlyData\n      .map((m) => ({\n        value: `${m.year}-${String(m.month).padStart(2, '0')}`,\n        label: new Date(m.year, m.month - 1, 1).toLocaleString(undefined, { month: 'long', year: 'numeric' }),\n        ...m,\n      }))\n      .sort((a, b) => (a.year - b.year) || (a.month - b.month));\n  }, [monthlyData]);\n\n  const currentY = new Date().getFullYear();\n  const currentM = new Date().getMonth() + 1;\n  const currentValue = `${currentY}-${String(currentM).padStart(2, '0')}`;\n\n  const [selectedMonthValue, setSelectedMonthValue] = useState(currentValue);\n\n  useEffect(() => {\n    // If current month not in options, default to the latest available\n    if (!monthOptions.find((o) => o.value === selectedMonthValue)) {\n      if (monthOptions.length > 0) {\n        setSelectedMonthValue(monthOptions[monthOptions.length - 1].value);\n      }\n    }\n  }, [monthOptions, selectedMonthValue]);\n\n  const selectedMonthData = useMemo(() => {\n    return monthOptions.find((o) => o.value === selectedMonthValue);\n  }, [monthOptions, selectedMonthValue]);\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">Dashboard</h2>\n      <p className=\"mt-2 text-gray-700 dark:text-gray-300\">Welcome back! Here's a quick overview.</p>\n\n      {/* Month selector */}\n      <div className=\"mt-4 flex items-center gap-3\">\n        <label className=\"text-sm text-gray-600 dark:text-gray-300\">Select month</label>\n        <select\n          className=\"input\"\n          value={selectedMonthValue}\n          onChange={(e) => setSelectedMonthValue(e.target.value)}\n        >\n          {monthOptions.map((opt) => (\n            <option key={opt.value} value={opt.value}>{opt.label}</option>\n          ))}\n        </select>\n      </div>\n\n      {/* Cards */}\n      <div className=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"card card-hover\">\n          <div className=\"text-sm text-gray-500\">This Month (My Items)</div>\n          <div className=\"mt-1 text-xl font-bold\">${(myItemsThisMonthTotal || 0).toFixed(2)}</div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"text-sm text-gray-500\">Selected Month Total (DB)</div>\n          <div className=\"mt-1 text-xl font-bold\">${(selectedMonthData?.total_amount ?? 0).toFixed(2)}</div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"text-sm text-gray-500\">Selected Month Transactions</div>\n          <div className=\"mt-1 text-xl font-bold\">{selectedMonthData?.transaction_count ?? '-'}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
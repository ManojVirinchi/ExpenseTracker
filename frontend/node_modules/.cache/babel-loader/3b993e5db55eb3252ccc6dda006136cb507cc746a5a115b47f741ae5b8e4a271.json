{"ast":null,"code":"var _jsxFileName = \"/Users/manojvirinchichitta/ExpenseTracker/frontend/src/pages/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useExpense } from '../context/ExpenseContext';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, XAxis, YAxis, Tooltip, Legend, Bar, CartesianGrid } from 'recharts';\nimport { expenseAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4'];\nconst MONTH_LABELS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst Analytics = () => {\n  _s();\n  const {\n    committedTransactions\n  } = useExpense();\n\n  // Monthly totals for bar chart\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [loadingMonthly, setLoadingMonthly] = useState(false);\n\n  // Pie chart: categories for selected month\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1); // 1-12\n  const [selectedYear, setSelectedYear] = useState(undefined);\n  const [categoryData, setCategoryData] = useState([]);\n  const [loadingCategories, setLoadingCategories] = useState(false);\n\n  // Fetch monthly totals (last 12 months)\n  useEffect(() => {\n    let active = true;\n    async function loadMonthly() {\n      try {\n        var _res$data;\n        setLoadingMonthly(true);\n        const res = await expenseAPI.getMonthlyAnalytics(12);\n        if (!active) return;\n        const data = (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.monthly_data) || []).map(d => ({\n          name: `${MONTH_LABELS[(d.month - 1) % 12]} ${d.year}`,\n          month: d.month,\n          year: d.year,\n          total: Number(d.total_amount || 0),\n          count: Number(d.transaction_count || 0)\n        }));\n        setMonthlyData(data);\n      } catch (e) {\n        setMonthlyData([]);\n      } finally {\n        setLoadingMonthly(false);\n      }\n    }\n    loadMonthly();\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  // Fetch categories for selected month\n  useEffect(() => {\n    let active = true;\n    async function loadCategories() {\n      try {\n        var _res$data2;\n        setLoadingCategories(true);\n        const res = await expenseAPI.getCategoriesByMonth(selectedMonth, selectedYear);\n        if (!active) return;\n        const items = ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.categories) || [];\n        setCategoryData(items.map(c => ({\n          name: c.category,\n          value: Number(c.total_amount || 0)\n        })));\n      } catch (e) {\n        setCategoryData([]);\n      } finally {\n        setLoadingCategories(false);\n      }\n    }\n    loadCategories();\n    return () => {\n      active = false;\n    };\n  }, [selectedMonth, selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-900 dark:text-gray-100\",\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-1 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Monthly Expenses (last 12 months)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-80 w-full mt-4\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: monthlyData,\n              margin: {\n                top: 10,\n                right: 20,\n                left: 0,\n                bottom: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                interval: 0,\n                angle: -30,\n                textAnchor: \"end\",\n                height: 60\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"total\",\n                name: \"Amount\",\n                fill: \"#3b82f6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Categories by Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"rounded-md border border-gray-300 bg-white px-3 py-1 text-sm\",\n                value: selectedMonth,\n                onChange: e => setSelectedMonth(parseInt(e.target.value, 10)),\n                children: MONTH_LABELS.map((label, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: idx + 1,\n                  children: label\n                }, label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"w-28 rounded-md border border-gray-300 bg-white px-3 py-1 text-sm\",\n                placeholder: \"Any year\",\n                value: selectedYear !== null && selectedYear !== void 0 ? selectedYear : '',\n                onChange: e => {\n                  const v = e.target.value;\n                  setSelectedYear(v === '' ? undefined : parseInt(v, 10));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-80 w-full mt-4\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: /*#__PURE__*/_jsxDEV(Pie, {\n                  data: categoryData,\n                  dataKey: \"value\",\n                  nameKey: \"name\",\n                  cx: \"50%\",\n                  cy: \"50%\",\n                  outerRadius: 110,\n                  label: true,\n                  children: categoryData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 space-y-2\",\n            children: [categoryData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"No data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), categoryData.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"inline-block h-3 w-3 rounded-sm\",\n                  style: {\n                    backgroundColor: COLORS[i % COLORS.length]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-700\",\n                  children: c.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-gray-900\",\n                children: [\"$\", c.value.toFixed ? c.value.toFixed(2) : c.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, c.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"BBxhhSJH+HB54g83EhKiajcx60w=\", false, function () {\n  return [useExpense];\n});\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useExpense","PieChart","Pie","Cell","ResponsiveContainer","BarChart","XAxis","YAxis","Tooltip","Legend","Bar","CartesianGrid","expenseAPI","jsxDEV","_jsxDEV","COLORS","MONTH_LABELS","Analytics","_s","committedTransactions","monthlyData","setMonthlyData","loadingMonthly","setLoadingMonthly","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","undefined","categoryData","setCategoryData","loadingCategories","setLoadingCategories","active","loadMonthly","_res$data","res","getMonthlyAnalytics","data","monthly_data","map","d","name","month","year","total","Number","total_amount","count","transaction_count","e","loadCategories","_res$data2","getCategoriesByMonth","items","categories","c","category","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","margin","top","right","left","bottom","strokeDasharray","dataKey","interval","angle","textAnchor","height","fill","onChange","parseInt","target","label","idx","type","placeholder","v","nameKey","cx","cy","outerRadius","entry","index","length","i","style","backgroundColor","toFixed","_c","$RefreshReg$"],"sources":["/Users/manojvirinchichitta/ExpenseTracker/frontend/src/pages/Analytics.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useExpense } from '../context/ExpenseContext';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, XAxis, YAxis, Tooltip, Legend, Bar, CartesianGrid } from 'recharts';\nimport { expenseAPI } from '../services/api';\n\nconst COLORS = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4'];\n\nconst MONTH_LABELS = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\nconst Analytics = () => {\n  const { committedTransactions } = useExpense();\n\n  // Monthly totals for bar chart\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [loadingMonthly, setLoadingMonthly] = useState(false);\n\n  // Pie chart: categories for selected month\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1); // 1-12\n  const [selectedYear, setSelectedYear] = useState(undefined);\n  const [categoryData, setCategoryData] = useState([]);\n  const [loadingCategories, setLoadingCategories] = useState(false);\n\n  // Fetch monthly totals (last 12 months)\n  useEffect(() => {\n    let active = true;\n    async function loadMonthly() {\n      try {\n        setLoadingMonthly(true);\n        const res = await expenseAPI.getMonthlyAnalytics(12);\n        if (!active) return;\n        const data = (res.data?.monthly_data || []).map((d) => ({\n          name: `${MONTH_LABELS[(d.month - 1) % 12]} ${d.year}`,\n          month: d.month,\n          year: d.year,\n          total: Number(d.total_amount || 0),\n          count: Number(d.transaction_count || 0),\n        }));\n        setMonthlyData(data);\n      } catch (e) {\n        setMonthlyData([]);\n      } finally {\n        setLoadingMonthly(false);\n      }\n    }\n    loadMonthly();\n    return () => { active = false; };\n  }, []);\n\n  // Fetch categories for selected month\n  useEffect(() => {\n    let active = true;\n    async function loadCategories() {\n      try {\n        setLoadingCategories(true);\n        const res = await expenseAPI.getCategoriesByMonth(selectedMonth, selectedYear);\n        if (!active) return;\n        const items = res.data?.categories || [];\n        setCategoryData(items.map((c) => ({ name: c.category, value: Number(c.total_amount || 0) })));\n      } catch (e) {\n        setCategoryData([]);\n      } finally {\n        setLoadingCategories(false);\n      }\n    }\n    loadCategories();\n    return () => { active = false; };\n  }, [selectedMonth, selectedYear]);\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">Analytics</h2>\n\n      <div className=\"mt-6 grid grid-cols-1 gap-6\">\n        {/* Monthly totals bar chart */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-sm font-medium text-gray-700\">Monthly Expenses (last 12 months)</h3>\n          </div>\n          <div className=\"h-80 w-full mt-4\">\n            <ResponsiveContainer>\n              <BarChart data={monthlyData} margin={{ top: 10, right: 20, left: 0, bottom: 0 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" interval={0} angle={-30} textAnchor=\"end\" height={60} />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"total\" name=\"Amount\" fill=\"#3b82f6\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Categories by selected month pie chart */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"card lg:col-span-2\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-sm font-medium text-gray-700\">Categories by Month</h3>\n              <div className=\"flex items-center gap-2\">\n                <select\n                  className=\"rounded-md border border-gray-300 bg-white px-3 py-1 text-sm\"\n                  value={selectedMonth}\n                  onChange={(e) => setSelectedMonth(parseInt(e.target.value, 10))}\n                >\n                  {MONTH_LABELS.map((label, idx) => (\n                    <option key={label} value={idx + 1}>{label}</option>\n                  ))}\n                </select>\n                <input\n                  type=\"number\"\n                  className=\"w-28 rounded-md border border-gray-300 bg-white px-3 py-1 text-sm\"\n                  placeholder=\"Any year\"\n                  value={selectedYear ?? ''}\n                  onChange={(e) => {\n                    const v = e.target.value;\n                    setSelectedYear(v === '' ? undefined : parseInt(v, 10));\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"h-80 w-full mt-4\">\n              <ResponsiveContainer>\n                <PieChart>\n                  <Pie data={categoryData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={110} label>\n                    {categoryData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          <div className=\"card\">\n            <h3 className=\"text-sm font-medium text-gray-700\">Categories</h3>\n            <div className=\"mt-4 space-y-2\">\n              {categoryData.length === 0 && (\n                <div className=\"text-sm text-gray-500\">No data</div>\n              )}\n              {categoryData.map((c, i) => (\n                <div key={c.name} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"inline-block h-3 w-3 rounded-sm\" style={{ backgroundColor: COLORS[i % COLORS.length] }} />\n                    <span className=\"text-sm text-gray-700\">{c.name}</span>\n                  </div>\n                  <span className=\"text-sm font-medium text-gray-900\">${c.value.toFixed ? c.value.toFixed(2) : c.value}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Analytics;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
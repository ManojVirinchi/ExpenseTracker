{"ast":null,"code":"import axios from 'axios';\n\n// Use relative base URL so CRA proxy forwards to backend (see package.json \"proxy\")\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\n\n// Do NOT set a global Content-Type, so FormData uploads can set proper boundaries\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\nexport const expenseAPI = {\n  // Transaction endpoints\n  getTransactions: (params = {}) => api.get('/api/transactions/', {\n    params\n  }),\n  saveTransactions: transactions => api.post('/api/transactions/batch', {\n    items: transactions\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  filterTransactions: filters => api.get('/api/transactions/filter', {\n    params: filters\n  }),\n  deleteAllTransactions: () => api.delete('/api/transactions/'),\n  // Analytics endpoints\n  getWeeklyAnalytics: (weeks = 4) => api.get('/api/transactions/analytics/weekly', {\n    params: {\n      weeks\n    }\n  }),\n  getMonthlyAnalytics: (months = 12) => api.get('/api/transactions/analytics/monthly', {\n    params: {\n      months\n    }\n  }),\n  getCategoryAnalytics: (days = 30) => api.get('/api/transactions/analytics/categories', {\n    params: {\n      period_days: days\n    }\n  }),\n  getCategoriesByMonth: (mm, year = undefined) => api.get('/api/transactions/analytics/categories-by-month', {\n    params: {\n      mm,\n      year\n    }\n  }),\n  getSpendingSummary: (days = 30) => api.get('/api/transactions/analytics/summary', {\n    params: {\n      period_days: days\n    }\n  }),\n  getCalendarData: (year, month) => api.get('/api/transactions/analytics/calendar', {\n    params: {\n      year,\n      month\n    }\n  }),\n  getByMonth: (mm, year = undefined) => api.get('/api/transactions/analytics/by-month', {\n    params: {\n      mm,\n      year\n    }\n  }),\n  // Upload endpoints\n  uploadFile: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/upload/', formData);\n  },\n  getSupportedFormats: () => api.get('/api/upload/formats')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","expenseAPI","getTransactions","params","get","saveTransactions","transactions","post","items","headers","filterTransactions","filters","deleteAllTransactions","delete","getWeeklyAnalytics","weeks","getMonthlyAnalytics","months","getCategoryAnalytics","days","period_days","getCategoriesByMonth","mm","year","undefined","getSpendingSummary","getCalendarData","month","getByMonth","uploadFile","file","formData","FormData","append","getSupportedFormats"],"sources":["/Users/manojvirinchichitta/ExpenseTracker/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Use relative base URL so CRA proxy forwards to backend (see package.json \"proxy\")\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\n\n// Do NOT set a global Content-Type, so FormData uploads can set proper boundaries\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\nexport const expenseAPI = {\n  // Transaction endpoints\n  getTransactions: (params = {}) => api.get('/api/transactions/', { params }),\n  saveTransactions: (transactions) => api.post('/api/transactions/batch', { items: transactions }, {\n    headers: { 'Content-Type': 'application/json' }\n  }),\n  filterTransactions: (filters) => api.get('/api/transactions/filter', { params: filters }),\n  deleteAllTransactions: () => api.delete('/api/transactions/'),\n  \n  // Analytics endpoints\n  getWeeklyAnalytics: (weeks = 4) => api.get('/api/transactions/analytics/weekly', { params: { weeks } }),\n  getMonthlyAnalytics: (months = 12) => api.get('/api/transactions/analytics/monthly', { params: { months } }),\n  getCategoryAnalytics: (days = 30) => api.get('/api/transactions/analytics/categories', { params: { period_days: days } }),\n  getCategoriesByMonth: (mm, year = undefined) => api.get('/api/transactions/analytics/categories-by-month', { params: { mm, year } }),\n  getSpendingSummary: (days = 30) => api.get('/api/transactions/analytics/summary', { params: { period_days: days } }),\n  getCalendarData: (year, month) => api.get('/api/transactions/analytics/calendar', { params: { year, month } }),\n  getByMonth: (mm, year = undefined) => api.get('/api/transactions/analytics/by-month', { params: { mm, year } }),\n  \n  // Upload endpoints\n  uploadFile: (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/upload/', formData);\n  },\n  getSupportedFormats: () => api.get('/api/upload/formats'),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE;;AAExD;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;AAEF,OAAO,MAAMO,UAAU,GAAG;EACxB;EACAC,eAAe,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKL,GAAG,CAACM,GAAG,CAAC,oBAAoB,EAAE;IAAED;EAAO,CAAC,CAAC;EAC3EE,gBAAgB,EAAGC,YAAY,IAAKR,GAAG,CAACS,IAAI,CAAC,yBAAyB,EAAE;IAAEC,KAAK,EAAEF;EAAa,CAAC,EAAE;IAC/FG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;EACFC,kBAAkB,EAAGC,OAAO,IAAKb,GAAG,CAACM,GAAG,CAAC,0BAA0B,EAAE;IAAED,MAAM,EAAEQ;EAAQ,CAAC,CAAC;EACzFC,qBAAqB,EAAEA,CAAA,KAAMd,GAAG,CAACe,MAAM,CAAC,oBAAoB,CAAC;EAE7D;EACAC,kBAAkB,EAAEA,CAACC,KAAK,GAAG,CAAC,KAAKjB,GAAG,CAACM,GAAG,CAAC,oCAAoC,EAAE;IAAED,MAAM,EAAE;MAAEY;IAAM;EAAE,CAAC,CAAC;EACvGC,mBAAmB,EAAEA,CAACC,MAAM,GAAG,EAAE,KAAKnB,GAAG,CAACM,GAAG,CAAC,qCAAqC,EAAE;IAAED,MAAM,EAAE;MAAEc;IAAO;EAAE,CAAC,CAAC;EAC5GC,oBAAoB,EAAEA,CAACC,IAAI,GAAG,EAAE,KAAKrB,GAAG,CAACM,GAAG,CAAC,wCAAwC,EAAE;IAAED,MAAM,EAAE;MAAEiB,WAAW,EAAED;IAAK;EAAE,CAAC,CAAC;EACzHE,oBAAoB,EAAEA,CAACC,EAAE,EAAEC,IAAI,GAAGC,SAAS,KAAK1B,GAAG,CAACM,GAAG,CAAC,iDAAiD,EAAE;IAAED,MAAM,EAAE;MAAEmB,EAAE;MAAEC;IAAK;EAAE,CAAC,CAAC;EACpIE,kBAAkB,EAAEA,CAACN,IAAI,GAAG,EAAE,KAAKrB,GAAG,CAACM,GAAG,CAAC,qCAAqC,EAAE;IAAED,MAAM,EAAE;MAAEiB,WAAW,EAAED;IAAK;EAAE,CAAC,CAAC;EACpHO,eAAe,EAAEA,CAACH,IAAI,EAAEI,KAAK,KAAK7B,GAAG,CAACM,GAAG,CAAC,sCAAsC,EAAE;IAAED,MAAM,EAAE;MAAEoB,IAAI;MAAEI;IAAM;EAAE,CAAC,CAAC;EAC9GC,UAAU,EAAEA,CAACN,EAAE,EAAEC,IAAI,GAAGC,SAAS,KAAK1B,GAAG,CAACM,GAAG,CAAC,sCAAsC,EAAE;IAAED,MAAM,EAAE;MAAEmB,EAAE;MAAEC;IAAK;EAAE,CAAC,CAAC;EAE/G;EACAM,UAAU,EAAGC,IAAI,IAAK;IACpB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,OAAOhC,GAAG,CAACS,IAAI,CAAC,cAAc,EAAEwB,QAAQ,CAAC;EAC3C,CAAC;EACDG,mBAAmB,EAAEA,CAAA,KAAMpC,GAAG,CAACM,GAAG,CAAC,qBAAqB;AAC1D,CAAC;AAED,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
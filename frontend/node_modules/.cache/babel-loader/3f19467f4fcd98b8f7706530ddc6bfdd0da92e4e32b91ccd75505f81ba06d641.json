{"ast":null,"code":"var _jsxFileName = \"/Users/manojvirinchichitta/ExpenseTracker/frontend/src/context/ExpenseContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useMemo, useCallback } from 'react';\nimport { expenseAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseContext = /*#__PURE__*/createContext();\nconst initialState = {\n  transactions: [],\n  analytics: {\n    weekly: null,\n    monthly: null,\n    categories: null,\n    calendar: null,\n    summary: null\n  },\n  loading: false,\n  error: null,\n  selectedTransactions: [],\n  currentMonth: new Date().getMonth() + 1,\n  currentYear: new Date().getFullYear()\n};\nfunction expenseReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'SET_TRANSACTIONS':\n      return {\n        ...state,\n        transactions: action.payload,\n        loading: false\n      };\n    case 'ADD_TRANSACTIONS':\n      return {\n        ...state,\n        transactions: [...state.transactions, ...action.payload]\n      };\n    case 'SET_ANALYTICS':\n      return {\n        ...state,\n        analytics: {\n          ...state.analytics,\n          ...action.payload\n        }\n      };\n    case 'SET_SELECTED_TRANSACTIONS':\n      return {\n        ...state,\n        selectedTransactions: action.payload\n      };\n    case 'TOGGLE_SELECTED_TRANSACTION':\n      {\n        const exists = state.selectedTransactions.find(t => t.id === action.payload.id);\n        const next = exists ? state.selectedTransactions.filter(t => t.id !== action.payload.id) : [...state.selectedTransactions, action.payload];\n        return {\n          ...state,\n          selectedTransactions: next\n        };\n      }\n    case 'CLEAR_SELECTED_TRANSACTIONS':\n      return {\n        ...state,\n        selectedTransactions: []\n      };\n    case 'SET_CALENDAR_MONTH':\n      return {\n        ...state,\n        currentMonth: action.payload.month,\n        currentYear: action.payload.year\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\nexport function ExpenseProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n  const loadTransactions = async () => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await expenseAPI.getTransactions();\n      dispatch({\n        type: 'SET_TRANSACTIONS',\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const loadAnalytics = async () => {\n    try {\n      const [weekly, monthly, categories, summary] = await Promise.all([expenseAPI.getWeeklyAnalytics(), expenseAPI.getMonthlyAnalytics(), expenseAPI.getCategoryAnalytics(), expenseAPI.getSpendingSummary()]);\n      dispatch({\n        type: 'SET_ANALYTICS',\n        payload: {\n          weekly: weekly.data,\n          monthly: monthly.data,\n          categories: categories.data,\n          summary: summary.data\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const loadCalendarData = async (year, month) => {\n    try {\n      const response = await expenseAPI.getCalendarData(year, month);\n      dispatch({\n        type: 'SET_ANALYTICS',\n        payload: {\n          calendar: response.data\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const saveTransactions = async transactions => {\n    try {\n      const response = await expenseAPI.saveTransactions(transactions);\n      dispatch({\n        type: 'ADD_TRANSACTIONS',\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const uploadFile = async file => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await expenseAPI.uploadFile(file);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return response.data;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  useEffect(() => {\n    loadTransactions();\n    loadAnalytics();\n  }, []);\n  const value = {\n    ...state,\n    loadTransactions,\n    loadAnalytics,\n    loadCalendarData,\n    saveTransactions,\n    uploadFile,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ExpenseProvider;\nexport function useExpense() {\n  _s2();\n  const context = useContext(ExpenseContext);\n  if (!context) {\n    throw new Error('useExpense must be used within an ExpenseProvider');\n  }\n  return context;\n}\n_s2(useExpense, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useMemo","useCallback","expenseAPI","jsxDEV","_jsxDEV","ExpenseContext","initialState","transactions","analytics","weekly","monthly","categories","calendar","summary","loading","error","selectedTransactions","currentMonth","Date","getMonth","currentYear","getFullYear","expenseReducer","state","action","type","payload","exists","find","t","id","next","filter","month","year","ExpenseProvider","children","_s","dispatch","loadTransactions","response","getTransactions","data","message","loadAnalytics","Promise","all","getWeeklyAnalytics","getMonthlyAnalytics","getCategoryAnalytics","getSpendingSummary","loadCalendarData","getCalendarData","saveTransactions","uploadFile","file","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useExpense","_s2","context","Error","$RefreshReg$"],"sources":["/Users/manojvirinchichitta/ExpenseTracker/frontend/src/context/ExpenseContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useMemo, useCallback } from 'react';\nimport { expenseAPI } from '../services/api';\n\nconst ExpenseContext = createContext();\n\nconst initialState = {\n  transactions: [],\n  analytics: {\n    weekly: null,\n    monthly: null,\n    categories: null,\n    calendar: null,\n    summary: null\n  },\n  loading: false,\n  error: null,\n  selectedTransactions: [],\n  currentMonth: new Date().getMonth() + 1,\n  currentYear: new Date().getFullYear()\n};\n\nfunction expenseReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    case 'SET_TRANSACTIONS':\n      return { ...state, transactions: action.payload, loading: false };\n    case 'ADD_TRANSACTIONS':\n      return { ...state, transactions: [...state.transactions, ...action.payload] };\n    case 'SET_ANALYTICS':\n      return { ...state, analytics: { ...state.analytics, ...action.payload } };\n    case 'SET_SELECTED_TRANSACTIONS':\n      return { ...state, selectedTransactions: action.payload };\n    case 'TOGGLE_SELECTED_TRANSACTION': {\n      const exists = state.selectedTransactions.find((t) => t.id === action.payload.id);\n      const next = exists\n        ? state.selectedTransactions.filter((t) => t.id !== action.payload.id)\n        : [...state.selectedTransactions, action.payload];\n      return { ...state, selectedTransactions: next };\n    }\n    case 'CLEAR_SELECTED_TRANSACTIONS':\n      return { ...state, selectedTransactions: [] };\n    case 'SET_CALENDAR_MONTH':\n      return { ...state, currentMonth: action.payload.month, currentYear: action.payload.year };\n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n}\n\nexport function ExpenseProvider({ children }) {\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n\n  const loadTransactions = async () => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const response = await expenseAPI.getTransactions();\n      dispatch({ type: 'SET_TRANSACTIONS', payload: response.data });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: error.message });\n    }\n  };\n\n  const loadAnalytics = async () => {\n    try {\n      const [weekly, monthly, categories, summary] = await Promise.all([\n        expenseAPI.getWeeklyAnalytics(),\n        expenseAPI.getMonthlyAnalytics(),\n        expenseAPI.getCategoryAnalytics(),\n        expenseAPI.getSpendingSummary()\n      ]);\n      \n      dispatch({\n        type: 'SET_ANALYTICS',\n        payload: {\n          weekly: weekly.data,\n          monthly: monthly.data,\n          categories: categories.data,\n          summary: summary.data\n        }\n      });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: error.message });\n    }\n  };\n\n  const loadCalendarData = async (year, month) => {\n    try {\n      const response = await expenseAPI.getCalendarData(year, month);\n      dispatch({\n        type: 'SET_ANALYTICS',\n        payload: { calendar: response.data }\n      });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: error.message });\n    }\n  };\n\n  const saveTransactions = async (transactions) => {\n    try {\n      const response = await expenseAPI.saveTransactions(transactions);\n      dispatch({ type: 'ADD_TRANSACTIONS', payload: response.data });\n      return response.data;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: error.message });\n      throw error;\n    }\n  };\n\n  const uploadFile = async (file) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const response = await expenseAPI.uploadFile(file);\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return response.data;\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: error.message });\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    loadTransactions();\n    loadAnalytics();\n  }, []);\n\n  const value = {\n    ...state,\n    loadTransactions,\n    loadAnalytics,\n    loadCalendarData,\n    saveTransactions,\n    uploadFile,\n    dispatch\n  };\n\n  return (\n    <ExpenseContext.Provider value={value}>\n      {children}\n    </ExpenseContext.Provider>\n  );\n}\n\nexport function useExpense() {\n  const context = useContext(ExpenseContext);\n  if (!context) {\n    throw new Error('useExpense must be used within an ExpenseProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
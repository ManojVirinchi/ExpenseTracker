{"ast":null,"code":"var _jsxFileName = \"/Users/manojvirinchichitta/ExpenseTracker/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { useExpense } from '../context/ExpenseContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _analytics$monthly, _selectedMonthData$to, _selectedMonthData$tr;\n  const {\n    analytics,\n    myItemsThisMonthTotal\n  } = useExpense();\n  const monthlyData = (analytics === null || analytics === void 0 ? void 0 : (_analytics$monthly = analytics.monthly) === null || _analytics$monthly === void 0 ? void 0 : _analytics$monthly.monthly_data) || [];\n  const monthOptions = useMemo(() => {\n    const opts = monthlyData.map(m => {\n      const mm = String(m.month).padStart(2, '0');\n      const label = new Date(m.year, m.month - 1, 1).toLocaleString(undefined, {\n        month: 'long',\n        year: 'numeric'\n      });\n      return {\n        value: `${m.year}-${mm}`,\n        label: `${label}`,\n        ...m\n      };\n    }).sort((a, b) => a.year - b.year || a.month - b.month);\n    return opts;\n  }, [monthlyData]);\n  const currentY = new Date().getFullYear();\n  const currentM = new Date().getMonth() + 1;\n  const currentValue = `${currentY}-${String(currentM).padStart(2, '0')}`;\n  const [selectedMonthValue, setSelectedMonthValue] = useState(currentValue);\n  useEffect(() => {\n    // If current month not in options, default to the latest available\n    if (!monthOptions.find(o => o.value === selectedMonthValue)) {\n      if (monthOptions.length > 0) {\n        setSelectedMonthValue(monthOptions[monthOptions.length - 1].value);\n      }\n    }\n  }, [monthOptions, selectedMonthValue]);\n  const selectedMonthData = useMemo(() => {\n    return monthOptions.find(o => o.value === selectedMonthValue);\n  }, [monthOptions, selectedMonthValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-900 dark:text-gray-100\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-gray-700 dark:text-gray-300\",\n      children: \"Welcome back! Here's a quick overview.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex items-center gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-sm text-gray-600 dark:text-gray-300 whitespace-nowrap\",\n        children: \"Select month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: selectedMonthValue,\n        onChange: e => setSelectedMonthValue(e.target.value),\n        children: [monthOptions.length === 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n          value: selectedMonthValue,\n          children: \"No data yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), monthOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt.value,\n          children: opt.label\n        }, opt.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"This Month (My Items)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xl font-bold\",\n          children: [\"$\", (myItemsThisMonthTotal || 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Selected Month Total (DB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xl font-bold\",\n          children: [\"$\", ((_selectedMonthData$to = selectedMonthData === null || selectedMonthData === void 0 ? void 0 : selectedMonthData.total_amount) !== null && _selectedMonthData$to !== void 0 ? _selectedMonthData$to : 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Selected Month Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xl font-bold\",\n          children: (_selectedMonthData$tr = selectedMonthData === null || selectedMonthData === void 0 ? void 0 : selectedMonthData.transaction_count) !== null && _selectedMonthData$tr !== void 0 ? _selectedMonthData$tr : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vz4hYjhwZFBy/nx7MWbyen6CmCA=\", false, function () {\n  return [useExpense];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useExpense","jsxDEV","_jsxDEV","Dashboard","_s","_analytics$monthly","_selectedMonthData$to","_selectedMonthData$tr","analytics","myItemsThisMonthTotal","monthlyData","monthly","monthly_data","monthOptions","opts","map","m","mm","String","month","padStart","label","Date","year","toLocaleString","undefined","value","sort","a","b","currentY","getFullYear","currentM","getMonth","currentValue","selectedMonthValue","setSelectedMonthValue","find","o","length","selectedMonthData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","opt","toFixed","total_amount","transaction_count","_c","$RefreshReg$"],"sources":["/Users/manojvirinchichitta/ExpenseTracker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport { useExpense } from '../context/ExpenseContext';\n\nconst Dashboard = () => {\n  const { analytics, myItemsThisMonthTotal } = useExpense();\n\n  const monthlyData = analytics?.monthly?.monthly_data || [];\n\n  const monthOptions = useMemo(() => {\n    const opts = monthlyData\n      .map((m) => {\n        const mm = String(m.month).padStart(2, '0');\n        const label = new Date(m.year, m.month - 1, 1)\n          .toLocaleString(undefined, { month: 'long', year: 'numeric' });\n        return {\n          value: `${m.year}-${mm}`,\n          label: `${label}`,\n          ...m,\n        };\n      })\n      .sort((a, b) => (a.year - b.year) || (a.month - b.month));\n    return opts;\n  }, [monthlyData]);\n\n  const currentY = new Date().getFullYear();\n  const currentM = new Date().getMonth() + 1;\n  const currentValue = `${currentY}-${String(currentM).padStart(2, '0')}`;\n\n  const [selectedMonthValue, setSelectedMonthValue] = useState(currentValue);\n\n  useEffect(() => {\n    // If current month not in options, default to the latest available\n    if (!monthOptions.find((o) => o.value === selectedMonthValue)) {\n      if (monthOptions.length > 0) {\n        setSelectedMonthValue(monthOptions[monthOptions.length - 1].value);\n      }\n    }\n  }, [monthOptions, selectedMonthValue]);\n\n  const selectedMonthData = useMemo(() => {\n    return monthOptions.find((o) => o.value === selectedMonthValue);\n  }, [monthOptions, selectedMonthValue]);\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">Dashboard</h2>\n      <p className=\"mt-2 text-gray-700 dark:text-gray-300\">Welcome back! Here's a quick overview.</p>\n\n      {/* Month selector */}\n      <div className=\"mt-4 flex items-center gap-3\">\n        <label className=\"text-sm text-gray-600 dark:text-gray-300 whitespace-nowrap\">Select month</label>\n        <select\n          className=\"px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          value={selectedMonthValue}\n          onChange={(e) => setSelectedMonthValue(e.target.value)}\n        >\n          {monthOptions.length === 0 && (\n            <option value={selectedMonthValue}>No data yet</option>\n          )}\n          {monthOptions.map((opt) => (\n            <option key={opt.value} value={opt.value}>{opt.label}</option>\n          ))}\n        </select>\n      </div>\n\n      {/* Cards */}\n      <div className=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"card card-hover\">\n          <div className=\"text-sm text-gray-500\">This Month (My Items)</div>\n          <div className=\"mt-1 text-xl font-bold\">${(myItemsThisMonthTotal || 0).toFixed(2)}</div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"text-sm text-gray-500\">Selected Month Total (DB)</div>\n          <div className=\"mt-1 text-xl font-bold\">${(selectedMonthData?.total_amount ?? 0).toFixed(2)}</div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"text-sm text-gray-500\">Selected Month Transactions</div>\n          <div className=\"mt-1 text-xl font-bold\">{selectedMonthData?.transaction_count ?? '-'}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3D,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EACtB,MAAM;IAAEC,SAAS;IAAEC;EAAsB,CAAC,GAAGT,UAAU,CAAC,CAAC;EAEzD,MAAMU,WAAW,GAAG,CAAAF,SAAS,aAATA,SAAS,wBAAAH,kBAAA,GAATG,SAAS,CAAEG,OAAO,cAAAN,kBAAA,uBAAlBA,kBAAA,CAAoBO,YAAY,KAAI,EAAE;EAE1D,MAAMC,YAAY,GAAGhB,OAAO,CAAC,MAAM;IACjC,MAAMiB,IAAI,GAAGJ,WAAW,CACrBK,GAAG,CAAEC,CAAC,IAAK;MACV,MAAMC,EAAE,GAAGC,MAAM,CAACF,CAAC,CAACG,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC3C,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACN,CAAC,CAACO,IAAI,EAAEP,CAAC,CAACG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAC3CK,cAAc,CAACC,SAAS,EAAE;QAAEN,KAAK,EAAE,MAAM;QAAEI,IAAI,EAAE;MAAU,CAAC,CAAC;MAChE,OAAO;QACLG,KAAK,EAAE,GAAGV,CAAC,CAACO,IAAI,IAAIN,EAAE,EAAE;QACxBI,KAAK,EAAE,GAAGA,KAAK,EAAE;QACjB,GAAGL;MACL,CAAC;IACH,CAAC,CAAC,CACDW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACL,IAAI,GAAGM,CAAC,CAACN,IAAI,IAAMK,CAAC,CAACT,KAAK,GAAGU,CAAC,CAACV,KAAM,CAAC;IAC3D,OAAOL,IAAI;EACb,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,MAAMoB,QAAQ,GAAG,IAAIR,IAAI,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC;EACzC,MAAMC,QAAQ,GAAG,IAAIV,IAAI,CAAC,CAAC,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC;EAC1C,MAAMC,YAAY,GAAG,GAAGJ,QAAQ,IAAIZ,MAAM,CAACc,QAAQ,CAAC,CAACZ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAEvE,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAACoC,YAAY,CAAC;EAE1EnC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACc,YAAY,CAACwB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,KAAK,KAAKS,kBAAkB,CAAC,EAAE;MAC7D,IAAItB,YAAY,CAAC0B,MAAM,GAAG,CAAC,EAAE;QAC3BH,qBAAqB,CAACvB,YAAY,CAACA,YAAY,CAAC0B,MAAM,GAAG,CAAC,CAAC,CAACb,KAAK,CAAC;MACpE;IACF;EACF,CAAC,EAAE,CAACb,YAAY,EAAEsB,kBAAkB,CAAC,CAAC;EAEtC,MAAMK,iBAAiB,GAAG3C,OAAO,CAAC,MAAM;IACtC,OAAOgB,YAAY,CAACwB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,KAAK,KAAKS,kBAAkB,CAAC;EACjE,CAAC,EAAE,CAACtB,YAAY,EAAEsB,kBAAkB,CAAC,CAAC;EAEtC,oBACEjC,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAIwC,SAAS,EAAC,yDAAyD;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtF5C,OAAA;MAAGwC,SAAS,EAAC,uCAAuC;MAAAD,QAAA,EAAC;IAAsC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAG/F5C,OAAA;MAAKwC,SAAS,EAAC,8BAA8B;MAAAD,QAAA,gBAC3CvC,OAAA;QAAOwC,SAAS,EAAC,4DAA4D;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClG5C,OAAA;QACEwC,SAAS,EAAC,2LAA2L;QACrMhB,KAAK,EAAES,kBAAmB;QAC1BY,QAAQ,EAAGC,CAAC,IAAKZ,qBAAqB,CAACY,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAE;QAAAe,QAAA,GAEtD5B,YAAY,CAAC0B,MAAM,KAAK,CAAC,iBACxBrC,OAAA;UAAQwB,KAAK,EAAES,kBAAmB;UAAAM,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACvD,EACAjC,YAAY,CAACE,GAAG,CAAEmC,GAAG,iBACpBhD,OAAA;UAAwBwB,KAAK,EAAEwB,GAAG,CAACxB,KAAM;UAAAe,QAAA,EAAES,GAAG,CAAC7B;QAAK,GAAvC6B,GAAG,CAACxB,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuC,CAC9D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN5C,OAAA;MAAKwC,SAAS,EAAC,2DAA2D;MAAAD,QAAA,gBACxEvC,OAAA;QAAKwC,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BvC,OAAA;UAAKwC,SAAS,EAAC,uBAAuB;UAAAD,QAAA,EAAC;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClE5C,OAAA;UAAKwC,SAAS,EAAC,wBAAwB;UAAAD,QAAA,GAAC,GAAC,EAAC,CAAChC,qBAAqB,IAAI,CAAC,EAAE0C,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eAEN5C,OAAA;QAAKwC,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BvC,OAAA;UAAKwC,SAAS,EAAC,uBAAuB;UAAAD,QAAA,EAAC;QAAyB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtE5C,OAAA;UAAKwC,SAAS,EAAC,wBAAwB;UAAAD,QAAA,GAAC,GAAC,EAAC,EAAAnC,qBAAA,GAACkC,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEY,YAAY,cAAA9C,qBAAA,cAAAA,qBAAA,GAAI,CAAC,EAAE6C,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F,CAAC,eAEN5C,OAAA;QAAKwC,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BvC,OAAA;UAAKwC,SAAS,EAAC,uBAAuB;UAAAD,QAAA,EAAC;QAA2B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxE5C,OAAA;UAAKwC,SAAS,EAAC,wBAAwB;UAAAD,QAAA,GAAAlC,qBAAA,GAAEiC,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEa,iBAAiB,cAAA9C,qBAAA,cAAAA,qBAAA,GAAI;QAAG;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAjFID,SAAS;EAAA,QACgCH,UAAU;AAAA;AAAAsD,EAAA,GADnDnD,SAAS;AAmFf,eAAeA,SAAS;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}